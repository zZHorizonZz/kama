syntax = "proto3";

package cloudeko.kama.collection.v1;

import "google/protobuf/empty.proto";

import "dev/cloudeko/kama/collection/v1/resources.proto";

// ----------------------------------------------------------------------------
// Collection Server API
// ----------------------------------------------------------------------------
// This service exposes CRUD operations for Collection resources.
// Requests and responses are intentionally minimal and reference the
// Collection resource defined in kama-commons.
//
// Backward-compatibility: only add new optional fields/messages/methods.
// Do not repurpose tags or change wire types.

option java_multiple_files = true;
option java_outer_classname = "CollectionServerProto";
option java_package = "dev.cloudeko.kama.collection.v1";
option csharp_namespace = "Cloudeko.Kama.Collection.V1";
option go_package = "cloudeko.dev/go/kama/collection/v1/collectionserverpb;collectionserverpb";
option php_namespace = "Cloudeko\\Kama\\Collection\\V1";
option ruby_package = "Cloudeko::Kama::Collection::V1";

service CollectionService {
  // Creates a new collection.
  rpc CreateCollection(CreateCollectionRequest) returns (Collection) {}

  // Updates a collection. Full replace of mutable fields unless otherwise noted.
  rpc UpdateCollection(UpdateCollectionRequest) returns (Collection) {}

  // Deletes a collection by name.
  rpc DeleteCollection(DeleteCollectionRequest) returns (google.protobuf.Empty) {}

  // Retrieves a collection by name.
  rpc GetCollection(GetCollectionRequest) returns (Collection) {}

  // Lists collections with simple pagination.
  rpc ListCollections(ListCollectionsRequest) returns (ListCollectionsResponse) {}
}

message CreateCollectionRequest {
  // Required. The collection to create. Server ignores OUTPUT_ONLY fields.
  Collection collection = 1;
}

message GetCollectionRequest {
  // Required. Resource name: collections/{collection}
  string name = 1;
}

message ListCollectionsRequest {
  // Optional filter string. Semantics are server-defined.
  string filter = 1;
  // The maximum number of collections to return. Server may enforce limits.
  int32 page_size = 2;
  // A page token, received from a previous ListCollections call.
  string page_token = 3;
}

message ListCollectionsResponse {
  repeated Collection collections = 1;
  string next_page_token = 2;
}

message UpdateCollectionRequest {
  // Required. The updated collection resource. The name identifies the target.
  Collection collection = 1;
  // Optional field mask in paths format (e.g., "display_name", "fields.foo").
  // Use a simple comma-separated string for portability.
  string update_mask = 2;
}

message DeleteCollectionRequest {
  // Required. Resource name: collections/{collection}
  string name = 1;
}
