syntax = "proto3";

package cloudeko.kama.record.v1;

import "google/api/field_behavior.proto";
import "google/api/field_info.proto";
import "google/api/resource.proto";

import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";

// ----------------------------------------------------------------------------
// Record Resource Model
// ----------------------------------------------------------------------------
// A Record is an instance of data that belongs to a Collection. Its shape is
// validated against the target Collection's schema. Servers populate resource
// identifiers and timestamps; clients supply the data payload in the values map.
//
// Resource name format:
//   collections/{collection}/records/{record}
// Where {collection} is the collection identifier and {record} is the record
// identifier (server-generated UUID4).
//
// Backward-compatibility guidelines:
// - Only add new optional fields; do not remove or repurpose existing tags.
// - Do not change wire types of existing fields.
//
// Example (JSON-like):
// {
//   "name": "collections/products/records/1f6a...",
//   "collection": "collections/products",
//   "values": {
//     "sku": "ABC-123",
//     "price": 19.99,
//     "tags": ["summer", "sale"]
//   }
// }

option java_multiple_files = true;
option java_outer_classname = "RecordResourcesProto";
option java_package = "dev.cloudeko.kama.record.v1";
option csharp_namespace = "Cloudeko.Kama.Record.V1";
option go_package = "cloudeko.dev/go/kama/record/v1/recordpb;recordpb";
option php_namespace = "Cloudeko\\Kama\\Record\\V1";
option ruby_package = "Cloudeko::Kama::Record::V1";

// A record belonging to a collection.
message Record {
  option (google.api.resource) = {
    type: "kama.cloudeko.dev/Record"
    pattern: "collections/{collection}/records/{record}"
    singular: "record"
    plural: "records"
  };

  // Output only. A universally unique identifier (UUID) for the record in
  // the UUID4 format. This identifier is generated by the server.
  // Example: "1f6a0d3e-4c2b-4f1e-9b8a-1234567890ab"
  string id = 1 [
    (google.api.field_info).format = UUID4,
    (google.api.field_behavior) = OUTPUT_ONLY
  ];

  // Output only. The canonical resource name of the record.
  // Format: collections/{collection}/records/{record}
  string name = 2 [(google.api.field_behavior) = OUTPUT_ONLY];

  // Required. The parent collection resource name this record belongs to.
  // Format: collections/{collection}
  string collection = 3 [(google.api.field_behavior) = REQUIRED];

  // The payload values of the record. The keys must correspond to field names
  // defined in the parent Collection's schema. Servers should validate the
  // structure and types according to that schema.
  google.protobuf.Struct values = 4;

  // Output only. The last time this record was updated (server time).
  google.protobuf.Timestamp update_time = 80 [(google.api.field_behavior) = OUTPUT_ONLY];

  // Output only. When this record was created (server time).
  google.protobuf.Timestamp create_time = 81 [(google.api.field_behavior) = OUTPUT_ONLY];
}
